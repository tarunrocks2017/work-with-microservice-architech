var cov_yutefksgn=function(){var path="/home/tarun/Documents/MountBlueProjects/08-tarunharsh-microservice-project/mySQL/movies/movieController.js",hash="e29ca65de73145ac9bf28af02f7e34bae0fdae22",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/tarun/Documents/MountBlueProjects/08-tarunharsh-microservice-project/mySQL/movies/movieController.js",statementMap:{"0":{start:{line:1,column:12},end:{line:1,column:63}},"1":{start:{line:3,column:12},end:{line:3,column:37}},"2":{start:{line:5,column:27},end:{line:5,column:105}},"3":{start:{line:8,column:27},end:{line:8,column:129}},"4":{start:{line:10,column:27},end:{line:10,column:155}},"5":{start:{line:12,column:33},end:{line:13,column:110}},"6":{start:{line:17,column:2},end:{line:24,column:3}},"7":{start:{line:18,column:23},end:{line:18,column:48}},"8":{start:{line:19,column:19},end:{line:19,column:61}},"9":{start:{line:20,column:4},end:{line:20,column:27}},"10":{start:{line:21,column:4},end:{line:21,column:18}},"11":{start:{line:23,column:4},end:{line:23,column:17}},"12":{start:{line:27,column:2},end:{line:34,column:3}},"13":{start:{line:28,column:23},end:{line:28,column:48}},"14":{start:{line:29,column:18},end:{line:29,column:98}},"15":{start:{line:30,column:19},end:{line:30,column:48}},"16":{start:{line:31,column:4},end:{line:31,column:18}},"17":{start:{line:33,column:4},end:{line:33,column:16}},"18":{start:{line:38,column:21},end:{line:38,column:46}},"19":{start:{line:39,column:17},end:{line:39,column:88}},"20":{start:{line:40,column:17},end:{line:40,column:47}},"21":{start:{line:41,column:2},end:{line:41,column:16}},"22":{start:{line:44,column:2},end:{line:58,column:3}},"23":{start:{line:45,column:4},end:{line:45,column:20}},"24":{start:{line:46,column:23},end:{line:46,column:48}},"25":{start:{line:47,column:24},end:{line:47,column:93}},"26":{start:{line:48,column:19},end:{line:48,column:54}},"27":{start:{line:49,column:4},end:{line:49,column:24}},"28":{start:{line:50,column:4},end:{line:52,column:5}},"29":{start:{line:51,column:6},end:{line:51,column:31}},"30":{start:{line:55,column:4},end:{line:55,column:18}},"31":{start:{line:57,column:4},end:{line:57,column:17}},"32":{start:{line:61,column:2},end:{line:69,column:3}},"33":{start:{line:62,column:23},end:{line:62,column:48}},"34":{start:{line:63,column:24},end:{line:63,column:93}},"35":{start:{line:64,column:19},end:{line:64,column:54}},"36":{start:{line:65,column:4},end:{line:65,column:27}},"37":{start:{line:66,column:4},end:{line:66,column:18}},"38":{start:{line:68,column:4},end:{line:68,column:17}},"39":{start:{line:72,column:2},end:{line:88,column:3}},"40":{start:{line:73,column:23},end:{line:73,column:48}},"41":{start:{line:74,column:18},end:{line:82,column:5}},"42":{start:{line:83,column:24},end:{line:83,column:74}},"43":{start:{line:84,column:19},end:{line:84,column:54}},"44":{start:{line:85,column:4},end:{line:85,column:18}},"45":{start:{line:87,column:4},end:{line:87,column:17}},"46":{start:{line:91,column:2},end:{line:107,column:3}},"47":{start:{line:92,column:23},end:{line:92,column:48}},"48":{start:{line:93,column:22},end:{line:101,column:5}},"49":{start:{line:102,column:24},end:{line:102,column:78}},"50":{start:{line:103,column:19},end:{line:103,column:54}},"51":{start:{line:104,column:4},end:{line:104,column:18}},"52":{start:{line:106,column:4},end:{line:106,column:17}},"53":{start:{line:109,column:0},end:{line:117,column:2}}},fnMap:{"0":{name:"getMovies",decl:{start:{line:16,column:15},end:{line:16,column:24}},loc:{start:{line:16,column:27},end:{line:25,column:1}},line:16},"1":{name:"getNewlyAddedMovie",decl:{start:{line:26,column:15},end:{line:26,column:33}},loc:{start:{line:26,column:45},end:{line:35,column:1}},line:26},"2":{name:"getMovieById",decl:{start:{line:37,column:15},end:{line:37,column:27}},loc:{start:{line:37,column:32},end:{line:42,column:1}},line:37},"3":{name:"fetchMovieDataById",decl:{start:{line:43,column:15},end:{line:43,column:33}},loc:{start:{line:43,column:38},end:{line:59,column:1}},line:43},"4":{name:"removeMovieById",decl:{start:{line:60,column:15},end:{line:60,column:30}},loc:{start:{line:60,column:35},end:{line:70,column:1}},line:60},"5":{name:"addMovie",decl:{start:{line:71,column:15},end:{line:71,column:23}},loc:{start:{line:71,column:37},end:{line:89,column:1}},line:71},"6":{name:"updateMovieById",decl:{start:{line:90,column:15},end:{line:90,column:30}},loc:{start:{line:90,column:48},end:{line:108,column:1}},line:90}},branchMap:{"0":{loc:{start:{line:50,column:4},end:{line:52,column:5}},type:"if",locations:[{start:{line:50,column:4},end:{line:52,column:5}},{start:{line:50,column:4},end:{line:52,column:5}}],line:50}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const con=(cov_yutefksgn.s[0]++,require('../migrationScripts/sqlScripts/connectDB'));const API=(cov_yutefksgn.s[1]++,require('./movieService'));const SELECT_FROM_MOVIES=(cov_yutefksgn.s[2]++,'select movieid,moviename,status ,image_url,actorname,releaseYear from movies');const INSERT_INTO_MOVIES=(cov_yutefksgn.s[3]++,'insert into movies(moviename,status,image_url,actorname,description,releaseYear) values(?,?,?,?,?,?)');const UPDATE_INTO_MOVIES=(cov_yutefksgn.s[4]++,'update movies set moviename = ?, status = ?, image_url = ?, actorname = ? , description = ?, releaseyear = ? where movieid = ?');const SELECT_FROM_MOVIES_BY_ID=(cov_yutefksgn.s[5]++,`select ac.actorname , moviename , m.movieid , status , releaseYear
,m.image_url , m.description from movies m right join actors ac on ac.movieid = m.movieid where m.movieid = ?`);async function getMovies(){cov_yutefksgn.f[0]++;cov_yutefksgn.s[6]++;try{const connection=(cov_yutefksgn.s[7]++,await con.getConnection());const result=(cov_yutefksgn.s[8]++,await connection.query(SELECT_FROM_MOVIES));cov_yutefksgn.s[9]++;await connection.end();cov_yutefksgn.s[10]++;return result;}catch(error){cov_yutefksgn.s[11]++;return error;}}async function getNewlyAddedMovie(moviename){cov_yutefksgn.f[1]++;cov_yutefksgn.s[12]++;try{const connection=(cov_yutefksgn.s[13]++,await con.getConnection());const query=(cov_yutefksgn.s[14]++,await connection.format('select * from movies where moviename = ?',[moviename]));const result=(cov_yutefksgn.s[15]++,await connection.query(query));cov_yutefksgn.s[16]++;return result;}catch(error){cov_yutefksgn.s[17]++;throw error;}}async function getMovieById(id){cov_yutefksgn.f[2]++;const connection=(cov_yutefksgn.s[18]++,await con.getConnection());const format=(cov_yutefksgn.s[19]++,await connection.format('select * from movies where movieid = ?',[id]));const result=(cov_yutefksgn.s[20]++,await connection.query(format));cov_yutefksgn.s[21]++;return result;}async function fetchMovieDataById(id){cov_yutefksgn.f[3]++;cov_yutefksgn.s[22]++;try{cov_yutefksgn.s[23]++;console.log(id);const connection=(cov_yutefksgn.s[24]++,await con.getConnection());const formatQuery=(cov_yutefksgn.s[25]++,await connection.format(SELECT_FROM_MOVIES_BY_ID,[parseInt(id,10)]));const result=(cov_yutefksgn.s[26]++,await connection.query(formatQuery));cov_yutefksgn.s[27]++;console.log(result);cov_yutefksgn.s[28]++;if(result[0].length===0){cov_yutefksgn.b[0][0]++;cov_yutefksgn.s[29]++;return'result is empty';}else{cov_yutefksgn.b[0][1]++;}// result[0].rating = await API.getRating(result[0].moviename);
// console.log(result[0].rating);
cov_yutefksgn.s[30]++;return result;}catch(error){cov_yutefksgn.s[31]++;return error;}}async function removeMovieById(id){cov_yutefksgn.f[4]++;cov_yutefksgn.s[32]++;try{const connection=(cov_yutefksgn.s[33]++,await con.getConnection());const formatQuery=(cov_yutefksgn.s[34]++,await connection.format('delete from movies where movieid = ?',[id]));const result=(cov_yutefksgn.s[35]++,await connection.query(formatQuery));cov_yutefksgn.s[36]++;await connection.end();cov_yutefksgn.s[37]++;return result;}catch(error){cov_yutefksgn.s[38]++;return error;}}async function addMovie(movieObject){cov_yutefksgn.f[5]++;cov_yutefksgn.s[39]++;try{const connection=(cov_yutefksgn.s[40]++,await con.getConnection());const movie=(cov_yutefksgn.s[41]++,[movieObject.moviename,movieObject.status,movieObject.image_url,movieObject.actorname,movieObject.description,movieObject.releaseYear]);const formatQuery=(cov_yutefksgn.s[42]++,await connection.format(INSERT_INTO_MOVIES,movie));const result=(cov_yutefksgn.s[43]++,await connection.query(formatQuery));cov_yutefksgn.s[44]++;return result;}catch(error){cov_yutefksgn.s[45]++;return error;}}async function updateMovieById(id,movieObject){cov_yutefksgn.f[6]++;cov_yutefksgn.s[46]++;try{const connection=(cov_yutefksgn.s[47]++,await con.getConnection());const MovieInfo=(cov_yutefksgn.s[48]++,[movieObject.moviename,movieObject.status,movieObject.image_url,movieObject.actorname,movieObject.description,movieObject.releaseYear,id]);const formatQuery=(cov_yutefksgn.s[49]++,await connection.format(UPDATE_INTO_MOVIES,MovieInfo));const result=(cov_yutefksgn.s[50]++,await connection.query(formatQuery));cov_yutefksgn.s[51]++;return result;}catch(error){cov_yutefksgn.s[52]++;return error;}}cov_yutefksgn.s[53]++;module.exports={getMovies,removeMovieById,addMovie,updateMovieById,getNewlyAddedMovie,getMovieById,fetchMovieDataById};