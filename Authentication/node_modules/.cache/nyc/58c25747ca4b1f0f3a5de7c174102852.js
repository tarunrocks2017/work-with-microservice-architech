var cov_146kpxnozj=function(){var path="/home/tarun/Documents/MountBlueProjects/08-tarunharsh-microservice-project/Authentication/User/Auth/AuthController.js",hash="ac5ebb76b5da22df4b1eee7e7bb0f77678f0cd2b",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/tarun/Documents/MountBlueProjects/08-tarunharsh-microservice-project/Authentication/User/Auth/AuthController.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:3,column:19},end:{line:3,column:42}},"2":{start:{line:5,column:19},end:{line:5,column:75}},"3":{start:{line:8,column:18},end:{line:8,column:20}},"4":{start:{line:11,column:2},end:{line:11,column:23}},"5":{start:{line:12,column:2},end:{line:18,column:3}},"6":{start:{line:13,column:17},end:{line:13,column:48}},"7":{start:{line:14,column:17},end:{line:14,column:50}},"8":{start:{line:15,column:4},end:{line:15,column:16}},"9":{start:{line:17,column:4},end:{line:17,column:33}},"10":{start:{line:22,column:2},end:{line:32,column:3}},"11":{start:{line:23,column:4},end:{line:23,column:35}},"12":{start:{line:24,column:4},end:{line:24,column:22}},"13":{start:{line:25,column:4},end:{line:25,column:36}},"14":{start:{line:26,column:21},end:{line:26,column:46}},"15":{start:{line:27,column:4},end:{line:27,column:26}},"16":{start:{line:28,column:17},end:{line:28,column:66}},"17":{start:{line:29,column:4},end:{line:29,column:16}},"18":{start:{line:31,column:4},end:{line:31,column:28}},"19":{start:{line:35,column:2},end:{line:45,column:3}},"20":{start:{line:36,column:16},end:{line:36,column:21}},"21":{start:{line:37,column:20},end:{line:37,column:57}},"22":{start:{line:38,column:4},end:{line:40,column:5}},"23":{start:{line:39,column:6},end:{line:39,column:19}},"24":{start:{line:41,column:4},end:{line:41,column:68}},"25":{start:{line:42,column:4},end:{line:42,column:17}},"26":{start:{line:44,column:4},end:{line:44,column:17}},"27":{start:{line:48,column:0},end:{line:52,column:2}}},fnMap:{"0":{name:"doHash",decl:{start:{line:10,column:15},end:{line:10,column:21}},loc:{start:{line:10,column:32},end:{line:19,column:1}},line:10},"1":{name:"enterData",decl:{start:{line:21,column:15},end:{line:21,column:24}},loc:{start:{line:21,column:31},end:{line:33,column:1}},line:21},"2":{name:"UserExist",decl:{start:{line:34,column:15},end:{line:34,column:24}},loc:{start:{line:34,column:42},end:{line:46,column:1}},line:34}},branchMap:{"0":{loc:{start:{line:38,column:4},end:{line:40,column:5}},type:"if",locations:[{start:{line:38,column:4},end:{line:40,column:5}},{start:{line:38,column:4},end:{line:40,column:5}}],line:38}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const bcrypt=(cov_146kpxnozj.s[0]++,require('bcrypt'));const collection=(cov_146kpxnozj.s[1]++,require('../userModel'));const connection=(cov_146kpxnozj.s[2]++,require('../../MigrationScripts/mongoScripts/connectDB'));const saltround=(cov_146kpxnozj.s[3]++,10);async function doHash(password){cov_146kpxnozj.f[0]++;cov_146kpxnozj.s[4]++;console.log(password);cov_146kpxnozj.s[5]++;try{const salt=(cov_146kpxnozj.s[6]++,await bcrypt.genSalt(saltround));const hash=(cov_146kpxnozj.s[7]++,await bcrypt.hash(password,salt));cov_146kpxnozj.s[8]++;return hash;}catch(err){cov_146kpxnozj.s[9]++;return'password not hashed';}}async function enterData(data){cov_146kpxnozj.f[1]++;cov_146kpxnozj.s[10]++;try{cov_146kpxnozj.s[11]++;console.log('request aai thi');cov_146kpxnozj.s[12]++;console.log(data);cov_146kpxnozj.s[13]++;connection.getMongoConnection();const userData=(cov_146kpxnozj.s[14]++,new collection.User(data));cov_146kpxnozj.s[15]++;await userData.save();const user=(cov_146kpxnozj.s[16]++,await collection.User.find({email:data.email}));cov_146kpxnozj.s[17]++;return user;}catch(err){cov_146kpxnozj.s[18]++;return'duplicate user';}}async function UserExist(email,password){cov_146kpxnozj.f[2]++;cov_146kpxnozj.s[19]++;try{let exist=(cov_146kpxnozj.s[20]++,false);const userObj=(cov_146kpxnozj.s[21]++,await collection.User.find({email}));cov_146kpxnozj.s[22]++;if(userObj.length===0){cov_146kpxnozj.b[0][0]++;cov_146kpxnozj.s[23]++;return exist;}else{cov_146kpxnozj.b[0][1]++;}cov_146kpxnozj.s[24]++;exist=await bcrypt.compare(password,userObj[0].userpassword);cov_146kpxnozj.s[25]++;return exist;}catch(error){cov_146kpxnozj.s[26]++;return error;}}cov_146kpxnozj.s[27]++;module.exports={doHash,enterData,UserExist};