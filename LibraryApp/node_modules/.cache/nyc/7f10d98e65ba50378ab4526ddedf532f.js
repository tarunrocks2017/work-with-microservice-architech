var cov_2322xokpfj=function(){var path="/home/tarun/Documents/MountBlueProjects/08-tarunharsh-microservice-project/LibraryApp/tests/testUser/testLoginController.js",hash="f7ae4911030070ea73135b82619048f377aed8c0",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/tarun/Documents/MountBlueProjects/08-tarunharsh-microservice-project/LibraryApp/tests/testUser/testLoginController.js",statementMap:{"0":{start:{line:2,column:15},end:{line:2,column:37}},"1":{start:{line:4,column:24},end:{line:4,column:78}},"2":{start:{line:6,column:0},end:{line:26,column:3}},"3":{start:{line:7,column:2},end:{line:15,column:5}},"4":{start:{line:8,column:18},end:{line:8,column:37}},"5":{start:{line:9,column:17},end:{line:9,column:24}},"6":{start:{line:11,column:19},end:{line:11,column:63}},"7":{start:{line:12,column:21},end:{line:12,column:25}},"8":{start:{line:14,column:4},end:{line:14,column:36}},"9":{start:{line:17,column:2},end:{line:25,column:5}},"10":{start:{line:18,column:18},end:{line:18,column:37}},"11":{start:{line:19,column:17},end:{line:19,column:24}},"12":{start:{line:21,column:19},end:{line:21,column:63}},"13":{start:{line:22,column:21},end:{line:22,column:26}},"14":{start:{line:24,column:4},end:{line:24,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:18},end:{line:6,column:19}},loc:{start:{line:6,column:24},end:{line:26,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:7,column:43},end:{line:7,column:44}},loc:{start:{line:7,column:55},end:{line:15,column:3}},line:7},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:45},end:{line:17,column:46}},loc:{start:{line:17,column:57},end:{line:25,column:3}},line:17}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/* eslint-env mode, mocha, http, chai */const Expect=(cov_2322xokpfj.s[0]++,require('chai').expect);const loginController=(cov_2322xokpfj.s[1]++,require('../../source/User/userLogin/LoginController'));cov_2322xokpfj.s[2]++;describe('login',()=>{cov_2322xokpfj.f[0]++;cov_2322xokpfj.s[3]++;it('should return login status of user',async()=>{cov_2322xokpfj.f[1]++;const email=(cov_2322xokpfj.s[4]++,'good@mountblue.io');const pass=(cov_2322xokpfj.s[5]++,'mount');const result=(cov_2322xokpfj.s[6]++,await loginController.UserExist(email,pass));const expected=(cov_2322xokpfj.s[7]++,true);cov_2322xokpfj.s[8]++;Expect(result).equals(expected);});cov_2322xokpfj.s[9]++;it('should return false for invalid user',async()=>{cov_2322xokpfj.f[2]++;const email=(cov_2322xokpfj.s[10]++,'good@mountblue.io');const pass=(cov_2322xokpfj.s[11]++,'itsme');const result=(cov_2322xokpfj.s[12]++,await loginController.UserExist(email,pass));const expected=(cov_2322xokpfj.s[13]++,false);cov_2322xokpfj.s[14]++;Expect(result).equals(expected);});});